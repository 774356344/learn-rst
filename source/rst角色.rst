########
rst 角色
########

"角色" 在 rst 中, 就是给一个文本加上特定的身份, 基于这个身份, 实现一系列效果. 可以类比为 CSS 中的 ``class``

语法如下::

    :rolename:`content`

- ``rolename`` 的效果与行为可以使用 Sphinx 预定义的, 也可以自定义.
- ``content`` 是指文本中的对象.

预定义角色
==========

.. _ROLE-REF:

ref
---

``ref`` 可以在整个项目的文档中进行交叉引用. 它使用这样的语法::

    :ref:`Label`

可以在正文的任意位置使用它来引用 Label 所指的内容. 要定义 Label, 需要在一个标题前使用指令::

    .. _示例标签:

    该标签对应段落的标题
    --------------------

    这是一个示例段落, 这里有一个引用了它自己的 REF ---- :ref:`示例标签`

立刻尝试! :ref:`ROLE-REF`.

引用角色还可以用于 图片, 表格 等对象. 只需要在他们前面使用 ``.. _标签名:`` 指令即可 也可以为对象指定 ``:name:`` 属性.

下面的两种语法是等效的::

    .. _图片:

    .. image:: path

    --------------------------

    .. image:: path
        :name: 图片

.. note:: 与隐式链接不同, ref 角色可以跨文件, 而隐式链接只是链接到当前页面的标题.