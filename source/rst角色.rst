########
rst 角色
########

"角色" 在 rst 中, 就是给一个文本加上特定的身份, 基于这个身份, 实现一系列效果. 可以类比为 CSS 中的 ``class``

语法如下::

    :rolename:`content`

- ``rolename`` 的效果与行为可以使用 Sphinx 预定义的, 也可以自定义.
- ``content`` 是指文本中的对象.

.. _ROLE-REF:

ref
===

``ref`` 可以在整个项目的文档中进行交叉引用. 它使用这样的语法::

    :ref:`Label`

可以在正文的任意位置使用它来引用 Label 所指的内容. 要定义 Label, 需要在一个标题前使用指令::

    .. _示例标签:

    该标签对应段落的标题
    --------------------

    这是一个示例段落, 这里有一个引用了它自己的 REF ---- :ref:`示例标签`

立刻尝试! :ref:`ROLE-REF`.

引用角色还可以用于 图片, 表格 等对象. 只需要在他们前面使用 ``.. _标签名:`` 指令即可 也可以为对象指定 ``:name:`` 属性.

下面的两种语法是等效的::

    .. _图片:

    .. image:: path

    --------------------------

    .. image:: path
        :name: 图片

.. note::
    与隐式链接不同, ref 角色可以跨文件,
    而隐式链接只是链接到当前页面的标题.

doc
===

doc 角色是指向项目内的某篇文档的链接.
链接目标可以用命名或路径方式指定. 不需要扩展名.

对于命名方式指定的文档, 需要其被包含在某个 toctree 当中,
例如 :doc:`latex` 将会链接到本项目中的 /latex.rst 文档,
因为它被包含在 /index.rst 的 toctree 当中.

如果要以路径方式指定, 那么可以用根路径 ``/`` 开头,
或者用 ``.`` 或 ``..`` 开头.
从根路径指定的 :doc:`/matplotlib` 将会指向 /matplotlib.rst,
而从 ``.`` 或 ``..`` 开头的, 则会以当前文档的位置为基准,
指向相对路径上的文档.

如果不指定链接命名的话, 则显示名为对应文档的标题.
:doc:`雷太赫 <latex>`

::

    :doc:`latex`

    :doc:`/matplotlib`

    # 设定命名
    :doc:`雷太赫 <latex>`

download
========

download 角色是指向项目中非 rst 文档, 而是可下载的文件的链接.

::

    :download:`example.zip`

指定的文件路径可以是相对路径或绝对路径.
相对路径以当前文档为基准,
绝对路径以项目根目录为根.

被引用的文件将会在构建时被复制到 ``_download`` 目录里,
重复的文件名将会被处理.
